/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
a,html{color:#fff}body,html{font-family:"Fira Code",monospace}html{line-height:1.15;-webkit-text-size-adjust:100%;padding:40px;overflow:hidden}body{background:#010c15;margin:0;padding:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%}button{font:100%/1.15 inherit}input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}button,p,ul{padding:0;margin:0}button{font-family:"Fira Code",monospace;background:0 0;outline:0;border:0;color:#fff;cursor:pointer}.footer-left__text,.footer-right__username,.header-contact,.nav__link{font-weight:450;font-size:16px;line-height:21px;color:#607b96}.telegram,.vkontakte{width:24px;height:24px;fill:rgba(96,123,150,.5254901961)}.github{width:24px;height:24px;fill:#607b96}.wrapper{background:#011627;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:absolute;left:30px;right:30px;top:30px;bottom:30px;border-radius:8px;border:1px solid #1e2d3d}.header{display:block}.header-left,.header-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #1e2d3d}.header-left{padding-left:22px}.header-logo,.header-logo:hover{-webkit-transition:color .2s ease-in-out;-o-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.header-logo{padding-top:18px;padding-bottom:18px;font-weight:450;font-size:16px;line-height:21px;color:#607b96}.header-logo:hover{color:#fff}.nav{margin-left:154px}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;list-style:none}.nav__list:last-child{border-right:1px solid #1e2d3d}.nav__item{height:58px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-left:1px solid #1e2d3d;position:relative}.nav__link,.nav__link:hover{-webkit-transition:color .2s ease-in-out;-o-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.nav__link{padding:18px 32px}.nav__link:hover{color:#fff}.nav__link:active,.nav__link:focus{color:#fea55f}.nav__link::after,.nav__link:hover::after{content:"";position:absolute;bottom:-2px;height:3px;-webkit-transition:width .4s ease-in-out;-o-transition:width .4s ease-in-out;transition:width .4s ease-in-out}.nav__link::after{display:block;left:0;width:0%;background:#fea55f}.nav__link:hover::after{width:100%;display:inline-block;right:0}.header-contact{position:relative;height:58px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-right:23px;padding-left:24px;border-left:1px solid #1e2d3d;-webkit-transition:color .2s ease-in-out;-o-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.header-active,.header-contact:hover{color:#fff}.header-contact::after{width:0}.header-contact::after,.header-contact:hover::after{-webkit-transition:width .4s ease-in-out;-o-transition:width .4s ease-in-out;transition:width .4s ease-in-out}.header-active::after,.header-contact::after,.header-contact:hover::after{content:"";position:absolute;left:0;bottom:-2px;height:3px;background:#fea55f}.header-active::after,.header-contact:hover::after{width:100%}.heading{display:block}.heading-container{position:relative;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;max-width:1190px;width:100%}.game-shadow{position:absolute;display:block;right:-180px;top:-116px;width:770px;height:732px;z-index:0;-webkit-animation:rotate 25s linear infinite;animation:rotate 25s linear infinite}.heading-left{padding-left:15px}.heading-left__greeting{font-weight:450;font-size:18px;line-height:24px;color:#e5e9f0}.heading-left__name{font-weight:400;font-size:62px;line-height:81px;color:#e5e9f0}.heading-left__profession{margin-bottom:81px;font-weight:450;font-size:32px;line-height:42px;color:#4d5bce}.heading-left__game,.heading-left__github-page{margin-bottom:10px;font-weight:450;font-size:16px;line-height:21px;color:#607b96}.heading-left__github-link{font-weight:500;font-size:16px;line-height:21px;cursor:default}.const{color:#4d5bce}.github{color:#43d9ad}.github-link,.github-link:hover{-webkit-transition:color .2s ease-in-out;-o-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.github-link{color:#e99287;position:relative;cursor:pointer}.github-link:hover{color:#fff}.heading-right{position:relative;width:510px;height:475px;background:-o-linear-gradient(299.74deg,rgba(23,85,83,.7) 1.7%,rgba(67,217,173,.091) 81.82%);background:linear-gradient(150.26deg,rgba(23,85,83,.7) 1.7%,rgba(67,217,173,.091) 81.82%);border:1px solid #0c1616;-webkit-box-shadow:inset 0 2px 0 rgba(255,255,255,.3);box-shadow:inset 0 2px 0 rgba(255,255,255,.3);-webkit-backdrop-filter:blur(64px);backdrop-filter:blur(64px);border-radius:8px}.heading-right__game{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.heading-right__game-bolt-up-left{position:absolute;width:13px;height:13px;left:12px;top:12px}.heading-right__game-bolt-up-right{position:absolute;width:13px;height:13px;right:12px;top:12px}.heading-right__game-bolt-bottom-left{position:absolute;width:13px;height:13px;left:12px;bottom:12px}.heading-right__game-bolt-bottom-right{position:absolute;width:13px;height:13px;bottom:12px;right:12px}.heading-right__game-screen{position:absolute;left:30px;top:35px;width:238.69px;height:405.32px;background:rgba(1,22,39,.84);-webkit-box-shadow:inset 1px 5px 11px rgba(2,18,27,.71);box-shadow:inset 1px 5px 11px rgba(2,18,27,.71);border-radius:8px;z-index:0}.heading-right .start-game,.heading-right .start-game:hover{-webkit-transition-property:color,background;-o-transition-property:color,background;transition-property:color,background;-webkit-transition-duration:.2s;-o-transition-duration:.2s;transition-duration:.2s;-webkit-transition-timing-function:ease-in-out;-o-transition-timing-function:ease-in-out;transition-timing-function:ease-in-out}.heading-right .start-game{position:absolute;left:63px;bottom:55px;padding:10px 14px;background:#fea55f;border-radius:8px;font-weight:500;font-size:14px;line-height:18px;color:#01080e}.heading-right .start-game:hover{background:#263b50;color:#fff}.heading-right__game-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:35px 35px 35px 24px;height:474px}.heading-right__game-keyboard{position:relative;padding-left:13px;padding-top:15px;margin-bottom:20px;width:181.38px;height:142px;background:rgba(1,20,35,.19);border-radius:8px}.heading-right__game-text{font-weight:450;font-size:14px;line-height:18px;color:#fff}.heading-right__game-arrow-up{position:absolute;left:66px;bottom:46px;width:49px;height:28.6px}.heading-right__game-arrow-down,.heading-right__game-arrow-left{position:absolute;left:66px;bottom:12px;width:49px;height:28.6px}.heading-right__game-arrow-left{left:12px}.heading-right__game-arrow-right{position:absolute;right:12px;bottom:12px;width:49px;height:28.6px}.heading-right__game-food{padding-left:13.5px}.heading-right__game-food-text{margin-bottom:11px;font-weight:450;font-size:14px;line-height:18px;color:#fff}.heading-right__game-lives{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:7px;width:131px}.heading-right__game-live{width:20px;height:20px}.heading-right__game-skip,.heading-right__game-skip:hover{-webkit-transition:background .2s ease-in-out;-o-transition:background .2s ease-in-out;transition:background .2s ease-in-out}.heading-right__game-skip{display:block;width:62px;padding:10px 14px;font-weight:450;font-size:14px;line-height:18px;color:#fff;border:1px solid #fff;border-radius:8px}.heading-right__game-skip:hover{background:#263b50}.button-skip{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.snake,.snake-food{position:absolute;left:98px;top:91px;width:52px;height:153px}.snake-food{left:92px;top:60px;width:20px;height:20px}.footer{display:block}.footer-wrapper{padding-left:22px;padding-right:22px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-top:1px solid #1e2d3d}.footer-left,.footer-left__text{height:58px;border-right:1px solid #1e2d3d}.footer-left{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative}.footer-left__text{padding-right:18px}.footer-left__social,.footer-left__text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.telegram,.telegram:hover,.vkontakte,.vkontakte:hover{-webkit-transition:fill .2s ease-in-out;-o-transition:fill .2s ease-in-out;transition:fill .2s ease-in-out}.telegram,.vkontakte{margin-right:14px;margin-left:14px}.footer-left__social::after{content:"";position:absolute;right:52px;width:1px;height:58px;background:#1e2d3d}.telegram:hover,.vkontakte:hover{fill:#607b96}.footer-right,.footer-right__username{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer-right__username{height:58px;padding-right:5px;padding-left:23px;border-left:1px solid #1e2d3d;cursor:pointer;-webkit-transition:color .3s ease-in-out;-o-transition:color .3s ease-in-out;transition:color .3s ease-in-out}.github{z-index:1000}.footer-right:hover .footer-right__username{color:#fff;-webkit-transition:color .2s ease-in-out;-o-transition:color .2s ease-in-out;transition:color .2s ease-in-out}.icons-wrapper__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:24px;height:24px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */